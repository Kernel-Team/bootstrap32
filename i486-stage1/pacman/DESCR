# prepare configure for cross-compilation
sed -i "s@./configure@./configure --host=$TARGET_ARCH --build=$BUILD_ARCH@g" PKGBUILD

# minimal dependencies, we don't sign anything yet, gpgme and gnupg have
# far too many dependencies which cannot be easily cross-compiled
sed -i "1!N;/depends=/s/'gpgme'//" PKGBUILD
sed -i 's@./configure@./configure --without-gpgme@' PKGBUILD

# asciidoc is a makedepend, we can use the one on the host (this means
# also we can pacman only rebuild on i486 itself after the whole python
# zoo is installed)
sed -i "/makedepends=/s/'asciidoc'//" PKGBUILD

#TODO FROM HERE

# craft a temporary i486 pacman.conf (no gpg and hard-coded architecture)
cp pacman.conf.i686 pacman.conf.i486
sed -i 's@^\(SigLevel\)@#\1@' pacman.conf.i486
sed -i 's@^\(LocalFileSigLevel\)@#\1@' pacman.conf.i486
# TODO: ADAPT sed -i 's@i686@i486@' pacman/PKGBUILD
sed -i 's@./configure@./configure --host=i486-unknown-linux-gnu --build=x86_64-pc-linux-gnu@g' pacman/PKGBUILD
# use 486 config and not 686 one
sed -i 's@pacman.conf.i686@pacman.conf.i486@' pacman/PKGBUILD
# some more architecture patching
sed -i 's@i686@i486@g' pacman/PKGBUILD
